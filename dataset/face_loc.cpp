/**
 * Locate face and save the extracted face to ./data/
 * Using .txt file generated by dataset.py.
 */

#include "opencv2/opencv.hpp"
#include "FaceLocationInterface.h"
#include <fstream>
#include <string>

using std::string;

int main() {
    // int InitializeFaceLib(double dConfidence, int nDevType=0, int nProcessIdx=0)
    // dConfidence: confidence
    // nDevType: GPU Server
    // nProcessIdx: assign GPU according to PID ??
    InitializeFaceLib(0.3, 2, 0);
    string sFilePath = "./img_list.txt";
    string strPath = "";
    std::fstream fImg(sFilePath.c_str(), std::ios::in);
    VEC_FACERECTINFO vecRlt;

    // location information
    int x, y, width, height;

    cv::Rect faceRect

    if(sImg.good()) {
        while(getline(sImg, strPath)) {
            // readin img
            srcMat = cv::imread(strPath);
            // get img path
            sFileName = strPath.substr(strPath.find_last_of('\\') + 1, strPath.length() - strPath.find_last_of('\\') - 1);
            // location
            qImg = IplImage(dstMat);
            LocationFace((unsigned char*)qImg.imageData, qImg.width, qImg.height, EImgType_Rgb24, 1, vecRlt);

            for (int n=0; n<vecRlt.size(); n++) {
                SFaceRectInfo sInfo = vecRlt[n];
                x = sInfo.nX;
                y = sInfo.nY;
                width = sInfo.nWidth;
                height = sInfo.nHeight;

                // Use opencv to save image in the location rectangle.
                


            }
        }
    }

}